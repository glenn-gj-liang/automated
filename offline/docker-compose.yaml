services:
  nginx:
    image: nginx:1.29
    container_name: docker-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${FILES_PATH}:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/registry.conf:ro
      - ./tls:/etc/nginx/tls:ro
    restart: unless-stopped
    networks: [registry-net]

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      # - "80:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      # - "443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
      TZ: 'Asia/Shanghai'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: 'Ph@1331'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_misc_etc_dnsmasq_d: 'true'
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - './etc-pihole:/etc/pihole'
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    restart: unless-stopped
    networks: [registry-net]

  ## UI (内网端口即可)
  registry-ui:
    image: dqzboy/docker-registry-ui:latest
    container_name: registry-ui
    environment:
      - DOCKER_REGISTRY_URL=http://reg-docker-hub:5000
      - SECRET_KEY_BASE=9f18244a1e1179fa5aa4a06a335d01b2
      - ENABLE_DELETE_IMAGES=true
      - NO_SSL_VERIFICATION=true
    restart: always
    # 不再映射到宿主
    # ports: ["50000:8080"]
    networks: [registry-net]

  ## docker hub
  dockerhub:
    image: dqzboy/registry:latest
    container_name: reg-docker-hub
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-hub.yml:/etc/distribution/config.yml
    # 不再暴露 51000
    # ports: ["51000:5000"]
    networks: [registry-net]

  ghcr:
    image: dqzboy/registry:latest
    container_name: reg-ghcr
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-ghcr.yml:/etc/distribution/config.yml
    networks: [registry-net]

  gcr:
    image: dqzboy/registry:latest
    container_name: reg-gcr
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-gcr.yml:/etc/distribution/config.yml
    networks: [registry-net]

  k8sgcr:
    image: dqzboy/registry:latest
    container_name: reg-k8s-gcr
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-k8sgcr.yml:/etc/distribution/config.yml
    networks: [registry-net]

  k8s:
    image: dqzboy/registry:latest
    container_name: reg-k8s
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-k8s.yml:/etc/distribution/config.yml
    networks: [registry-net]

  quay:
    image: dqzboy/registry:latest
    container_name: reg-quay
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-quay.yml:/etc/distribution/config.yml
    networks: [registry-net]

  mcr:
    image: dqzboy/registry:latest
    container_name: reg-mcr
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-mcr.yml:/etc/distribution/config.yml
    networks: [registry-net]

  elastic:
    image: dqzboy/registry:latest
    container_name: reg-elastic
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-elastic.yml:/etc/distribution/config.yml
    networks: [registry-net]

  nvcr:
    image: dqzboy/registry:latest
    container_name: reg-nvcr
    restart: always
    environment:
      - OTEL_TRACES_EXPORTER=none
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry-nvcr.yml:/etc/distribution/config.yml
    networks: [registry-net]

networks:
  registry-net:
